#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.4 on Wed Feb 20 15:25:01 2013

import wx

# begin wxGlade: extracode
# end wxGlade


class MainMenu(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MainMenu.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        
        # Menu Bar
        self.frame_1_menubar = wx.MenuBar()
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(wx.NewId(), "Nova Captura", "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(wx.NewId(), "Abrir Captura", "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(wx.NewId(), "Guardar Captura", "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(wx.NewId(), "Guardar Captura Como...", "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(wx.NewId(), "Sair", "", wx.ITEM_NORMAL)
        self.frame_1_menubar.Append(wxglade_tmp_menu, "Ficheiro")
        wxglade_tmp_menu = wx.Menu()
        self.frame_1_menubar.Append(wxglade_tmp_menu, "Estastisticas")
        self.SetMenuBar(self.frame_1_menubar)
        # Menu Bar end
        self.window_2 = wx.SplitterWindow(self, -1, style=wx.SP_3D | wx.SP_BORDER)
        self.window_2_pane_1 = wx.ScrolledWindow(self.window_2, -1, style=wx.TAB_TRAVERSAL)
        self.list_ctrl = wx.ListCtrl(self.window_2_pane_1, -1, style=wx.LC_REPORT | wx.SUNKEN_BORDER)
        self.window_2_pane_2 = wx.Panel(self.window_2, -1)
        self.window_3 = wx.SplitterWindow(self.window_2_pane_2, -1, style=wx.SP_3D | wx.SP_BORDER)
        self.window_3_pane_1 = wx.ScrolledWindow(self.window_3, -1, style=wx.TAB_TRAVERSAL)
        self.tree_ctrl = wx.TreeCtrl(self.window_3_pane_1, -1, style=wx.TR_HAS_BUTTONS | wx.TR_DEFAULT_STYLE | wx.SUNKEN_BORDER)
        self.window_3_pane_2 = wx.ScrolledWindow(self.window_3, -1, style=wx.TAB_TRAVERSAL)
        self.buffer_Lable = wx.StaticText(self.window_3_pane_2, -1, "label_2")
        self.frame_1_statusbar = self.CreateStatusBar(1, 0)

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MainMenu.__set_properties
        self.SetTitle("frame_1")
        self.SetSize((800, 715))
        self.window_2_pane_1.SetScrollRate(10, 10)
        self.window_3_pane_1.SetScrollRate(10, 10)
        self.window_3_pane_2.SetScrollRate(10, 10)
        self.frame_1_statusbar.SetStatusWidths([-1])
        # statusbar fields
        frame_1_statusbar_fields = ["frame_1_statusbar"]
        for i in range(len(frame_1_statusbar_fields)):
            self.frame_1_statusbar.SetStatusText(frame_1_statusbar_fields[i], i)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MainMenu.__do_layout
        sizer_6 = wx.BoxSizer(wx.VERTICAL)
        sizer_7 = wx.BoxSizer(wx.VERTICAL)
        sizer_10 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_9 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_8 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_8.Add(self.list_ctrl, 1, wx.EXPAND, 0)
        
        
        #Adiciona os cabeçalhos das colunas
        self.list_ctrl.InsertColumn(0, 'No.', width=50)
        self.list_ctrl.InsertColumn(1, 'Tempo')
        self.list_ctrl.InsertColumn(2, 'Origem', width=125)
        self.list_ctrl.InsertColumn(3, 'Destino', width=125)
        self.list_ctrl.InsertColumn(3, 'Protocolo')
        self.list_ctrl.InsertColumn(3, 'Dimensão')
        
             
        
        self.window_2_pane_1.SetSizer(sizer_8)
        sizer_9.Add(self.tree_ctrl, 1, wx.EXPAND, 0)
        self.window_3_pane_1.SetSizer(sizer_9)
        sizer_10.Add(self.buffer_Lable, 0, 0, 0)
        self.window_3_pane_2.SetSizer(sizer_10)
        self.window_3.SplitHorizontally(self.window_3_pane_1, self.window_3_pane_2)
        sizer_7.Add(self.window_3, 1, wx.EXPAND, 0)
        self.window_2_pane_2.SetSizer(sizer_7)
        self.window_2.SplitHorizontally(self.window_2_pane_1, self.window_2_pane_2)
        sizer_6.Add(self.window_2, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_6)
        self.Layout()
        # end wxGlade

    def field_lineOfList_ctrl(self, countPackeg, infoLine):
        count = 1
        
        for lista in infoLine:
            self.list_ctrl.InsertStringItem(countPackeg - 1, str(countPackeg))
            for item in lista:
                
                self.list_ctrl.SetStringItem(countPackeg - 1, count, str(item))
                self.list_ctrl.UpdateWindowUI()
                self.Show()
                count += 1
            
            pass

    def field_List_ctrl(self, countPackeg, list):
        count = 1
       
        
       
        
        for line in list:
            self.list_ctrl.InsertStringItem(0, str(countPackeg))
            
            
            for item in line:
                
                self.list_ctrl.SetStringItem(0, count, item)
                self.list_ctrl.UpdateWindowUI()
                self.Show()
                count += 1
                
            #faz reset ao contador
            count = 0
            
        
        pass
